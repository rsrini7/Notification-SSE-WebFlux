services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092" # For clients running outside docker-compose network (like your Spring Boot app)
      - "9093:9093" # For clients running inside docker-compose network
    environment:
      - KAFKA_CFG_NODE_ID=1 # Explicitly set node ID
      - KAFKA_BROKER_ID=1 # Still needed for ZK compatibility? Keep for now.
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_PROCESS_ROLES=broker,controller # Combined roles
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER # Specify controller listener name
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT # Add CONTROLLER map
      - KAFKA_CFG_LISTENERS=CLIENT://:9093,EXTERNAL://:9092,CONTROLLER://:9094 # Add CONTROLLER listener on 9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9093,EXTERNAL://localhost:9092 # Keep advertised listeners
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9094 # Define controller quorum voters (NodeID@Host:ControllerPort)
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1 # For single node setup
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1 # For single node setup
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1 # For single node setup
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka

  mailcrab:
    image: marlonb/mailcrab:latest
    ports:
      - "1080:1080" # Web UI (Note: Port changed from 8025)
      - "1025:1025" # SMTP server (Remains the same)

  gemfire:
    image: apachegeode/geode:1.15.1
    command: gfsh start locator --name=locator1 --port=10334 --hostname-for-clients=gemfire
    ports:
      - "10334:10334"
      - "40404:40404"
    volumes:
      - gemfire_data:/data
    healthcheck:
      test: ["CMD", "gfsh", "connect", "--locator=gemfire[10334]", "--timeout=5", "--user=admin", "--password=admin", "--force", "--skip-ssl-validation", "--disable-default-server", "--exec='list members'"]
      interval: 10s
      timeout: 5s
      retries: 5

  gemfire_server:
    image: apachegeode/geode:1.15.1
    command: gfsh start server --name=server1 --locators=gemfire[10334] --server-port=40404 --hostname-for-clients=gemfire_server --user=admin --password=admin
    depends_on:
      - gemfire
    volumes:
      - gemfire_server_data:/data
    healthcheck:
      test: ["CMD", "gfsh", "connect", "--locator=gemfire[10334]", "--timeout=5", "--user=admin", "--password=admin", "--force", "--skip-ssl-validation", "--disable-default-server", "--exec='list members'"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  gemfire_data:
    driver: local
  gemfire_server_data:
    driver: local