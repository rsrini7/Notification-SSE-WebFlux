# Server Configuration
server:
  port: 8080
  max-http-request-header-size: 131072
  tomcat:
    accept-count: 100
    max-connections: 1000
    connection-timeout: 3000 # 3 seconds in milliseconds
    threads:
      max: 400
      min-spare: 10
      max-http-header-size: 131072
  servlet:
    session:
      timeout: 300 # 5 minutes in seconds

spring:
  application:
    name: notification-service
  main:
    keep-alive: true
  threads:
    virtual:
      enabled: true # Enable virtual threads for better concurrency handling
  # Enable asynchronous processing
  mvc:
    async:
      request-timeout: 5000 # 5 seconds in milliseconds
      task-executor:
        core-pool-size: 10
        max-pool-size: 50
        queue-capacity: 100

  # H2 Database Configuration
  datasource:
    url: jdbc:h2:mem:notificationdb;MODE=ORACLE;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 30000 # 30 seconds in milliseconds
      connection-timeout: 30000 # 30 seconds in milliseconds
      pool-name: H2NotificationPool
      auto-commit: true
      validation-timeout: 5000 # 5 seconds in milliseconds
  h2:
    console:
      enabled: true
      path: /h2-console
  
  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true
  
  # SQL Initialization
  sql:
    init:
      mode: always
      schema-locations: classpath:schema.sql
      data-locations: classpath:data.sql
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: java.util,java.lang,com.example.notification.model,com.example.notification.dto
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      ack-mode: RECORD
      concurrency: 3 # Number of concurrent consumers
      poll-timeout: 3000 # 3 seconds in milliseconds
  
  # Email Configuration
  mail:
    host: localhost
    port: 1025
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false

# Custom Application Properties
notification:
  kafka:
    topics:
      notifications: notifications
      critical-notifications: critical-notifications
  security:
    jwt:
      secret: ${JWT_SECRET:defaultSecretKeyForDevelopmentOnlyReplaceInProduction}
      expiration: 86400000 # 24 hours in milliseconds

logging:
  file:
    name: backend.log
  
  # Logging levels configuration
  level:
    # Security logging
    '[org.springframework.security]': WARN
    '[org.springframework.security.web]': WARN
    '[org.springframework.security.authentication]': WARN
    '[org.springframework.security.web.access.intercept]': WARN
    '[org.springframework.security.config]': WARN

    # Application specific packages
    '[com.example.notification]': INFO
    
    # Kafka logging (reduced verbosity)
    '[org.apache.kafka.clients.consumer.internals.ConsumerCoordinator]': WARN
    '[org.apache.kafka.clients.consumer.ConsumerRebalanceListener]': WARN
    '[org.springframework.kafka.listener.KafkaMessageListenerContainer]': WARN
    '[org.springframework.kafka.KafkaListenerEndpointContainer]': WARN
    '[org.springframework.kafka.listener.adapter]': WARN
    '[org.springframework.kafka.support]': WARN
    '[org.springframework.kafka]': WARN
    '[org.apache.kafka.clients.consumer.internals.SubscriptionState]': WARN
    
    # Other logging
    '[org.hibernate.SQL]': WARN
    '[org.hibernate.type.descriptor.sql.BasicBinder]': WARN
    '[org.hibernate.engine.jdbc.spi.SqlStatementLogger]': WARN
    '[org.springframework.jdbc.core.JdbcTemplate]': WARN
    '[org.springframework.orm.jpa.JpaTransactionManager]': WARN
    '[org.springframework.transaction]': WARN
    
    # Additional logger levels
    '[org.apache.kafka.clients.consumer.internals.ConsumerRebalanceListenerInvoker]': WARN
    '[io.micrometer.core.instrument.MeterRegistry]': ERROR
    '[org.apache.kafka.clients.NetworkClient]': WARN
    '[org.apache.kafka.clients.consumer.internals]': WARN
    
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"